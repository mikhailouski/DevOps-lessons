pipeline {
    agent any

    environment {
        ELASTICSEARCH_DOCKER_IMAGE = "elasticsearch:8.16.0"
        KIBANA_DOCKER_IMAGE = "kibana:8.16.0"
        LOGSTASH_DOCKER_IMAGE = "logstash:8.16.0"
    }

    stages {
        stage('Check System Resources') {
            steps {
                script {
                    def freeRAM = sh(script: "free -m | awk 'NR==2 {print \$4}'", returnStdout: true).trim()
                    freeRAM = freeRAM.toInteger()

                    def freeDisk = sh(script: "df / | awk 'NR==2 {print \$4}'", returnStdout: true).trim()
                    freeDisk = freeDisk.toInteger()
                    freeDisk = freeDisk / 1024

                    if (freeRAM < 4096 && freeDisk < 4096) {
                        currentBuild.description = "Недостаточно ресурсов. Будет развёрнут только Elasticsearch."
                    } else {
                        currentBuild.description = "Ресурсов достаточно. Будет развёрнут ELK stack."
                    }
                }
            }
        }

        stage('Deploy Elasticsearch') {
            when {
                expression { 
                    return currentBuild.description.contains('Elasticsearch') 
                }
            }
            steps {
                script {
                    echo "Разворачиваем Elasticsearch..."
                    sh "docker rm -f elasticsearch || true"
                    sh "docker run -d --name elasticsearch -e discovery.type=single-node -p 9200:9200 ${ELASTICSEARCH_DOCKER_IMAGE}"
                }
            }
        }

        stage('Deploy Full ELK Stack') {
            when {
                expression { 
                    return currentBuild.description.contains('ELK stack') 
                }
            }
            steps {
                script {
                    echo "Разворачиваем полный ELK stack (Elasticsearch, Logstash, Kibana)..."
                    sh "docker network create elk-network || true"  // Создаем сеть, если её нет
                    sh "docker rm -f elasticsearch || true"
                    sh "docker rm -f logstash || true"
                    sh "docker rm -f kibana || true"

                    sh "docker run -d --name elasticsearch --network elk-network -e discovery.type=single-node -p 9200:9200 ${ELASTICSEARCH_DOCKER_IMAGE}"
                    sh "docker run -d --name logstash --network elk-network -p 5044:5044 ${LOGSTASH_DOCKER_IMAGE}"
                    sh "docker run -d --name kibana --network elk-network -p 5601:5601 ${KIBANA_DOCKER_IMAGE}"
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline завершен"
        }
    }
}